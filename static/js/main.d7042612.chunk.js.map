{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","add_Todo","obj","todo","state","value","edit","setState","task","edit_todo","index","delete_todo","splice","deleteAll","handle_Change","e","i","target","update","className","noValidate","autoComplete","TextField","this","style","fontSize","onChange","label","type","onClick","map","v","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAiHeA,E,kDA7Gb,aAAe,IAAD,8BACZ,gBAMFC,SAAW,WACT,IAAIC,EAAM,CACRC,KAAM,EAAKC,MAAMC,MACjBC,MAAM,GAER,EAAKC,SAAS,CACZC,KAAK,GAAD,mBAAM,EAAKJ,MAAMI,MAAjB,CAAuBN,IAC3BG,MAAO,MAdG,EAiBdI,UAAY,SAACC,GACX,EAAKN,MAAMI,KAAKE,GAAOJ,MAAO,EAC9B,EAAKC,SAAS,CACZC,KAAM,EAAKJ,MAAMI,QApBP,EAuBdG,YAAc,SAACD,GACb,EAAKN,MAAMI,KAAKI,OAAOF,EAAO,GAC9B,EAAKH,SAAS,CACZC,KAAM,EAAKJ,MAAMI,QA1BP,EA6BdK,UAAU,WACV,EAAKN,SAAS,CACZC,KAAK,MA/BO,EAkCdM,cAAc,SAACC,EAAEC,GACf,EAAKZ,MAAMI,KAAKQ,GAAGb,KAAOY,EAAEE,OAAOZ,MACnC,EAAKE,SAAS,CACZC,KAAM,EAAKJ,MAAMI,QArCP,EAwCdU,OAAO,SAACR,GACN,EAAKN,MAAMI,KAAKE,GAAOJ,MAAO,EAC9B,EAAKC,SAAS,CACZC,KAAM,EAAKJ,MAAMI,QAzCnB,EAAKJ,MAAQ,CACXI,KAAM,CAAC,CAAEL,KAAM,UAAWG,MAAM,IAChCD,MAAO,IAJG,E,qDA8CJ,IAAD,OACP,OACE,sBAAKc,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,2CACA,uBAAMC,YAAU,EAACC,aAAa,MAA9B,UACE,cAACC,EAAA,EAAD,CAAWjB,MAAOkB,KAAKnB,MAAMC,MAAOmB,MAAO,CAAEC,SAAU,QAAUC,SAC/D,SAACX,GACC,EAAKR,SAAS,CACZF,MAAOU,EAAEE,OAAOZ,SAIpBsB,MAAM,iBACR,uBACA,wBAAQC,KAAK,SAAST,UAAU,kBAC9BU,QACE,WACE,EAAK5B,YAHX,uBAWJ,sBAAKkB,UAAU,QAAf,UACE,0CACA,6BAEII,KAAKnB,MAAMI,KAAKsB,KAAI,SAACC,EAAGf,GACtB,OACE,+BAEGe,EAAEzB,KAAO,cAACgB,EAAA,EAAD,CAAWjB,MAAO0B,EAAE5B,KAAMqB,MAAO,CAAEC,SAAU,QAAUE,MAAM,SAASD,SAC9E,SAACX,GACC,EAAKD,cAAcC,EAAEC,MAIvBe,EAAE5B,KAEF4B,EAAEzB,KAAO,wBAAQsB,KAAK,SAAST,UAAU,gCACvCU,QAAS,kBAAM,EAAKX,OAAOF,IADpB,oBAGP,wBAAQY,KAAK,SAAST,UAAU,gCAC9BU,QAAS,kBAAM,EAAKpB,UAAUO,IADhC,kBAGJ,wBAAQY,KAAK,SAAST,UAAU,gCAC9BU,QAAS,kBAAM,EAAKlB,YAAYK,IADlC,oBAEA,wBAAQY,KAAK,SAAST,UAAU,gCAC9BU,QAAS,kBAAM,EAAKhB,aADtB,0BAlBOG,kB,GA/ETgB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7042612.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      task: [{ todo: \"Morning\", edit: false }],\n      value: ''\n    }\n  }\n  add_Todo = () => {\n    let obj = {\n      todo: this.state.value,\n      edit: false\n    }\n    this.setState({\n      task: [...this.state.task, obj],\n      value: ''\n    })\n  }\n  edit_todo = (index) => {\n    this.state.task[index].edit = true;\n    this.setState({\n      task: this.state.task\n    })\n  }\n  delete_todo = (index) => {\n    this.state.task.splice(index, 1);\n    this.setState({\n      task: this.state.task\n    })\n  }\n  deleteAll=()=>{\n  this.setState({\n    task:[]\n  })\n  }\n  handle_Change=(e,i)=>{\n    this.state.task[i].todo = e.target.value;\n    this.setState({\n      task: this.state.task\n    }) \n  }\n  update=(index)=>{\n    this.state.task[index].edit = false;\n    this.setState({\n      task: this.state.task\n    })\n  }\n  render() {\n    return (\n      <div className='main'>\n        <div className='todo'>\n          <h2>Add Tasks</h2>\n          <form noValidate autoComplete=\"off\">\n            <TextField value={this.state.value} style={{ fontSize: \"20px\" }} onChange={\n              (e) => {\n                this.setState({\n                  value: e.target.value\n                })\n              }\n            }\n              label=\"What to do ?\" />\n            <br />\n            <button type=\"button\" className=\"btn btn-primary\"\n              onClick={\n                () => {\n                  this.add_Todo()\n                }\n              }\n            >\n              Add\n        </button>\n          </form>\n        </div>\n        <div className=\"todos\">\n          <h2>Tasks : </h2>\n          <ul>\n            {\n              this.state.task.map((v, i) => {\n                return (\n                  <li key={i}>\n\n                    {v.edit ? <TextField value={v.todo} style={{ fontSize: \"20px\" }} label=\"Update\" onChange={\n                      (e)=>{\n                        this.handle_Change(e,i);\n                      }\n                    } />\n                      :\n                      v.todo}\n                    {\n                      v.edit ? <button type=\"button\" className=\"btn btn-primary btn-sm delete\"\n                        onClick={() => this.update(i)}>Update</button>\n                        :\n                        <button type=\"button\" className=\"btn btn-primary btn-sm delete\"\n                          onClick={() => this.edit_todo(i)}>Edit</button>\n                    }\n                    <button type=\"button\" className=\"btn btn-primary btn-sm delete\"\n                      onClick={() => this.delete_todo(i)}>Delete</button>\n                    <button type=\"button\" className=\"btn btn-primary btn-sm delete\"\n                      onClick={() => this.deleteAll()}>Delete All</button>\n                  </li>\n                );\n              }\n              )\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}